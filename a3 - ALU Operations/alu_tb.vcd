$date
	Tue Oct  6 13:53:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 1 ! d_we $end
$var wire 32 " rvout [31:0] $end
$var wire 32 # rv2 [31:0] $end
$var wire 32 $ rv1 [31:0] $end
$var wire 5 % rs2 [4:0] $end
$var wire 5 & rs1 [4:0] $end
$var wire 5 ' rd [4:0] $end
$var wire 32 ( r_rv2 [31:0] $end
$var wire 6 ) op [5:0] $end
$var wire 5 * d_rs1 [4:0] $end
$var reg 1 + clk $end
$var reg 5 , i_rs1 [4:0] $end
$var reg 32 - instr [31:0] $end
$var reg 1 . sel $end
$var reg 1 / we $end
$var integer 32 0 exp_reg [31:0] $end
$var integer 32 1 fail [31:0] $end
$var integer 32 2 fp [31:0] $end
$var integer 32 3 i [31:0] $end
$var integer 32 4 log_file [31:0] $end
$var integer 32 5 numinstr [31:0] $end
$var integer 32 6 reg_file [31:0] $end
$var integer 32 7 s [31:0] $end
$scope module u1 $end
$var wire 32 8 rvout [31:0] $end
$var wire 32 9 rv2 [31:0] $end
$var wire 32 : rv1 [31:0] $end
$var wire 6 ; op [5:0] $end
$var reg 32 < alu_out [31:0] $end
$upscope $end
$scope module u2 $end
$var wire 1 + clk $end
$var wire 5 = rs1 [4:0] $end
$var wire 32 > rv1 [31:0] $end
$var wire 32 ? rv2 [31:0] $end
$var wire 32 @ wdata [31:0] $end
$var wire 1 / we $end
$var wire 5 A rs2 [4:0] $end
$var wire 5 B rd [4:0] $end
$var reg 1 C reset $end
$var integer 32 D i [31:0] $end
$upscope $end
$scope module u3 $end
$var wire 32 E instr [31:0] $end
$var wire 6 F op [5:0] $end
$var wire 32 G r_rv2 [31:0] $end
$var wire 1 ! we $end
$var wire 5 H shamt [4:0] $end
$var wire 32 I rv2 [31:0] $end
$var wire 5 J rs2 [4:0] $end
$var wire 5 K rs1 [4:0] $end
$var wire 5 L rd [4:0] $end
$var wire 12 M immediate [11:0] $end
$var wire 1 N imm_sel $end
$var wire 3 O func3 [2:0] $end
$var reg 6 P opcode [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx P
bx O
xN
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
b100000 D
1C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
b1 7
b10000000000000000000000000000100 6
b111 5
b10000000000000000000000000000101 4
bx 3
b10000000000000000000000000000011 2
bx 1
bx 0
x/
1.
bx -
bx ,
1+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
1!
$end
#1
0C
#5
b11 "
b11 8
b11 @
b11 <
b0 $
b0 :
b0 >
b1 &
b1 =
b11 #
b11 9
b11 I
b11 M
b1 )
b1 ;
b1 F
b1 P
b0 O
0N
b11 H
b1 '
b1 B
b1 L
b1 *
b1 K
b0 (
b0 ?
b0 G
b11 %
b11 A
b11 J
1/
b1100001000000010010011 -
b1100001000000010010011 E
b0 3
0+
#10
b110 "
b110 8
b110 @
b110 <
b11 $
b11 :
b11 >
1+
#15
b111 "
b111 8
b111 @
b111 <
b100 #
b100 9
b100 I
b100 M
b100 H
b100 %
b100 A
b100 J
b10000001000000010010011 -
b10000001000000010010011 E
b1 3
0+
#20
b1011 "
b1011 8
b1011 @
b1011 <
b111 $
b111 :
b111 >
1+
#25
b101 "
b101 8
b101 @
b101 <
b101 #
b101 9
b101 I
b0 $
b0 :
b0 >
b10 &
b10 =
b101 M
b101 H
b10 '
b10 B
b10 L
b10 *
b10 K
b101 %
b101 A
b101 J
b10100010000000100010011 -
b10100010000000100010011 E
b10 3
0+
#30
b1010 "
b1010 8
b1010 @
b1010 <
b101 $
b101 :
b101 >
1+
#35
b1 #
b1 9
b1 I
b10 "
b10 8
b10 @
b10 <
b1 M
b1001 )
b1001 ;
b1001 F
b1001 P
b101 O
b1 H
b111 (
b111 ?
b111 G
b1 %
b1 A
b1 J
b100010101000100010011 -
b100010101000100010011 E
b11 3
0+
#40
b1 "
b1 8
b1 @
b1 <
b10 $
b10 :
b10 >
1+
#45
b101 "
b101 8
b101 @
b101 <
b10 #
b10 9
b10 I
b10000000010 M
b111 $
b111 :
b111 >
b1 &
b1 =
b10 )
b10 ;
b10 F
b10 P
b0 O
1N
b10 H
b11 '
b11 B
b11 L
b1 *
b1 K
b10 (
b10 ?
b10 G
b10 %
b10 A
b10 J
b1000000001000001000000110110011 -
b1000000001000001000000110110011 E
b100 3
0+
#50
1+
#55
b11111111111111111111111111111110 "
b11111111111111111111111111111110 8
b11111111111111111111111111111110 @
b11111111111111111111111111111110 <
b101 $
b101 :
b101 >
b11 &
b11 =
b111 #
b111 9
b111 I
b10000000001 M
b1 H
b100 '
b100 B
b100 L
b11 *
b11 K
b111 (
b111 ?
b111 G
b1 %
b1 A
b1 J
b1000000000100011000001000110011 -
b1000000000100011000001000110011 E
b101 3
0+
#60
1+
#65
b0 "
b0 8
b0 @
b0 <
b11111111111111111111111111111110 $
b11111111111111111111111111111110 :
b11111111111111111111111111111110 >
b100 &
b100 =
b10 #
b10 9
b10 I
b10 M
b111 )
b111 ;
b111 F
b111 P
b11 O
b10 H
b101 '
b101 B
b101 L
b100 *
b100 K
b10 (
b10 ?
b10 G
b10 %
b10 A
b10 J
b1000100011001010110011 -
b1000100011001010110011 E
b110 3
0+
#70
1+
#75
b1 "
b1 8
b1 @
b1 <
b0 $
b0 :
b0 >
b0 &
b0 =
b0 0
b0 ,
0.
b0 1
0/
b0 3
0+
#80
1+
#85
b0 "
b0 8
b0 @
b0 <
b111 $
b111 :
b111 >
b1 &
b1 =
b111 0
b1 ,
b1 3
0+
#90
1+
#95
b10 $
b10 :
b10 >
b10 &
b10 =
b10 0
b10 ,
b10 3
0+
#100
1+
#105
b101 $
b101 :
b101 >
b11 &
b11 =
b101 0
b11 ,
b11 3
0+
#110
1+
#115
b11111111111111111111111111111110 $
b11111111111111111111111111111110 :
b11111111111111111111111111111110 >
b100 &
b100 =
b11111111111111111111111111111110 0
b100 ,
b100 3
0+
#120
1+
#125
b1 "
b1 8
b1 @
b1 <
b0 $
b0 :
b0 >
b101 &
b101 =
b0 0
b101 ,
b101 3
0+
#130
1+
#135
b110 &
b110 =
b110 ,
b110 3
0+
#140
1+
#145
b111 &
b111 =
b111 ,
b111 3
0+
#150
1+
#155
b1000 &
b1000 =
b1000 ,
b1000 3
0+
#160
1+
#165
b1001 &
b1001 =
b1001 ,
b1001 3
0+
#170
1+
#175
b1010 &
b1010 =
b1010 ,
b1010 3
0+
#180
1+
#185
b1011 &
b1011 =
b1011 ,
b1011 3
0+
#190
1+
#195
b1100 &
b1100 =
b1100 ,
b1100 3
0+
#200
1+
#205
b1101 &
b1101 =
b1101 ,
b1101 3
0+
#210
1+
#215
b1110 &
b1110 =
b1110 ,
b1110 3
0+
#220
1+
#225
b1111 &
b1111 =
b1111 ,
b1111 3
0+
#230
1+
#235
b10000 &
b10000 =
b10000 ,
b10000 3
0+
#240
1+
#245
b10001 &
b10001 =
b10001 ,
b10001 3
0+
#250
1+
#255
b10010 &
b10010 =
b10010 ,
b10010 3
0+
#260
1+
#265
b10011 &
b10011 =
b10011 ,
b10011 3
0+
#270
1+
#275
b10100 &
b10100 =
b10100 ,
b10100 3
0+
#280
1+
#285
b10101 &
b10101 =
b10101 ,
b10101 3
0+
#290
1+
#295
b10110 &
b10110 =
b10110 ,
b10110 3
0+
#300
1+
#305
b10111 &
b10111 =
b10111 ,
b10111 3
0+
#310
1+
#315
b11000 &
b11000 =
b11000 ,
b11000 3
0+
#320
1+
#325
b11001 &
b11001 =
b11001 ,
b11001 3
0+
#330
1+
#335
b11010 &
b11010 =
b11010 ,
b11010 3
0+
#340
1+
#345
b11011 &
b11011 =
b11011 ,
b11011 3
0+
#350
1+
#355
b11100 &
b11100 =
b11100 ,
b11100 3
0+
#360
1+
#365
b11101 &
b11101 =
b11101 ,
b11101 3
0+
#370
1+
#375
b11110 &
b11110 =
b11110 ,
b11110 3
0+
#380
1+
#385
b11111 &
b11111 =
b11111111111111111111111111111111 7
b11111 ,
b11111 3
0+
#390
1+
#395
b100000 3
0+
